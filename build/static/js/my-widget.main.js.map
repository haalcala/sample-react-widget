{"version":3,"sources":["webpack:///./src/App.tsx","webpack:///./src/reportWebVitals.ts","webpack:///./src/index.tsx"],"names":["App","id","wrapper","document","getElementById","ownerData","getAttribute","ownerHandler","console","log","className","onClick","window","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+LA+BeA,EAxBe,SAAC,GAAU,IAATC,EAAQ,EAARA,GACxBC,EAA2BC,SAASC,eAAeH,GAEnDI,EAAcH,EAAWA,EAA2BI,aAAa,cAAuB,GAExFC,EAAiBL,EAAWA,EAA2BI,aAAa,iBAA0B,KASpG,OAHAE,QAAQC,IAAI,uBAAuBJ,EAAUA,WAC7CG,QAAQC,IAAI,gBAAgBF,GAG1B,sBAAKG,UAAU,MAAf,sCAC2B,uBAD3B,cAEcL,EAFd,IAEyB,uBACvB,wBAAQM,QAXM,WAChBC,OAAOC,MAAM,0BAUX,uBACA,wBAAQF,QAASJ,EAAjB,sCCZSO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKxB,GAAG,0BAEVE,SAASC,eAAe,wBAM1BU,K","file":"static/js/my-widget.main.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nexport interface AppProps {\n  id:string\n}\n\nconst App:React.FC<AppProps>= ({id}) => {\n  const wrapper:HTMLElement|null = document.getElementById(id);\n\n  const ownerData:any=wrapper? ((wrapper as HTMLDivElement).getAttribute(\"owner-data\") as any) :\"\";\n\n  const ownerHandler:any=wrapper? ((wrapper as HTMLDivElement).getAttribute(\"owner-handler\") as any) :null;\n\n  const handleClick=()=>{\n    window.alert(\"Hello from the widget\")\n  }\n\n  console.log(\"ownerData.ownerData:\",ownerData.ownerData)\n  console.log(\"ownerHandler:\",ownerHandler)\n\n  return (\n    <div className=\"App\">\n      This is my sample plugin!<br/>\n      ownerData: {ownerData} <br/>\n      <button onClick={handleClick}>Click me!</button>\n      <button onClick={ownerHandler}>Trigger ownerHandler</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App id=\"my-widget-container\" />\n  </React.StrictMode>,\n  document.getElementById('my-widget-container')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}